from malware_list_parser.rss_plugin import RssPlugin
import re

class SpyEyeTrackerDropUrls(RssPlugin):
	def __init__(self):
		"""
		Builds a new object for parsing the SpyeEye Tracker drop urls feed
		"""
		super(SpyEyeTrackerDropUrls, self).__init__(name="SpyEye Tracker Drop Urls Feed", rss_url="https://spyeyetracker.abuse.ch/monitor.php?rssfeed=dropurls")
		for entry in self.entries:
		    entry["Host"] = entry["SpyEye DropURL"]
		    del entry["SpyEye DropURL"]

class SpyEyeTrackerCnC(RssPlugin):
	def __init__(self):
		"""
		Builds a new object for parsing the SpyeEye Tracker C&C feed
		"""
		super(SpyEyeTrackerCnC, self).__init__(name="SpyEye Tracker C&C feed", rss_url="https://spyeyetracker.abuse.ch/monitor.php?rssfeed=tracker")

class SpyEyeTrackerConfigUrls(RssPlugin):
	def __init__(self):
		"""
		Builds a new object for parsing the SpyeEye Tracker config urls feed
		"""
		super(SpyEyeTrackerConfigUrls, self).__init__(name="SpyEye Tracker Config Urls Feed", rss_url="https://spyeyetracker.abuse.ch/monitor.php?rssfeed=configurls")
		for entry in self.entries:
		    entry["Host"] = entry["SpyEye ConfigURL"]
		    del entry["SpyEye ConfigURL"]

class SpyEyeTrackerBinaryUrls(RssPlugin):
	def __init__(self):
		"""
		Builds a new object for parsing the SpyeEye Tracker binary urls feed
		"""
		super(SpyEyeTrackerBinaryUrls, self).__init__(name="SpyEye Tracker Binary Urls Feed", rss_url="https://spyeyetracker.abuse.ch/monitor.php?rssfeed=binaryurls")
		for entry in self.entries:
		    entry["Host"] = entry["SpyEye BinaryURL"]
		    del entry["SpyEye BinaryURL"]
		
		
